function FrontBase(){}function Auth(){this.scrollWrapper=$(".scroll-wrapper"),this.maskWrapper=$(".mask-wrapper"),this.smsCapthaBtn=$("#sms-captcha")}FrontBase.prototype.run=function(){this.ListenUserBox()},FrontBase.prototype.ListenUserBox=function(){var t=$(".auth-box"),e=$(".user-more-box");t.hover(function(){e.show()},function(){e.hide()})},$(function(){(new FrontBase).run()}),Auth.prototype.ShowEvent=function(){this.maskWrapper.show()},Auth.prototype.HideEvent=function(){this.maskWrapper.hide()},Auth.prototype.ListenBtnClick=function(){var t=this,e=$(".signin-btn"),n=$(".signup-btn"),s=$(".close-btn");e.click(function(){t.ShowEvent(),t.scrollWrapper.css({left:0})}),n.click(function(){t.ShowEvent(),t.scrollWrapper.css({left:"-400px"})}),s.click(function(){t.HideEvent()})},Auth.prototype.ListenSigninBtnClick=function(){var o=this,t=$(".signin-group"),e=t.find("input[name='telephone']"),n=t.find("input[name='password']"),s=t.find("input[name='remember']");t.find(".submit-btn").click(function(){telephone=e.val(),password=n.val(),remember=s.prop("checked"),telephone&&password||window.messageBox.showInfo("请输入完整的账号信息！"),xfzajax.post({url:"/account/login/",data:{telephone:telephone,password:password,remember:remember?1:0},success:function(t){if(200==t.code)o.HideEvent(),window.location.reload();else{var e=t.message;if("string"==typeof e||e.constructor==String)window.messageBox.showError(e);else for(var n in console.log(e),e){var s=e[n][0];window.messageBox.showError(s)}}},fail:function(t){window.messageBox.showError(t)}})})},Auth.prototype.ListensignupEvent=function(){var t=$(".signup-group"),r=t.find("input[name='telephone']"),c=t.find("input[name='sms_captcha']"),p=t.find("input[name='img_captcha']"),u=t.find("input[name='username']"),h=t.find("input[name='password1']"),l=t.find("input[name='password2']");t.find(".submit-btn").click(function(t){t.preventDefault();var e=r.val(),n=c.val(),s=p.val(),o=h.val(),a=l.val(),i=u.val();e?i?o?a?n&&s?xfzajax.post({url:"/account/signup/",data:{telephone:e,username:i,password1:o,password2:a,img_captcha:s,sms_captcha:n},success:function(t){if(200==t.code)window.location.reload();else{var e=t.message;if("string"==typeof e||e.constructor==String)window.messageBox.showError(e);else for(var n in console.log(e),e){var s=e[n][0];window.messageBox.showError(s)}}},fail:function(t){window.messageBox.showError(t)}}):window.messageBox.showError("请输入验证码"):window.messageBox.showError("请再次确认密码"):window.messageBox.showError("请输入密码"):window.messageBox.showError("请输入用户名"):window.messageBox.showError("请输入手机号")})},Auth.prototype.Switch=function(){var e=this;$(".switch").click(function(){var t=e.scrollWrapper.css("left");(t=parseInt(t))<0?e.scrollWrapper.animate({left:"0"}):e.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.ListenimgCaptcha=function(){var t=$("#captcha-img");t.click(function(){t.attr("src","/account/img_captcha/?=random"+Math.random())})},Auth.prototype.ListensmsSuccessSend=function(){var t=this;window.messageBox.showSuccess("发送成功，请注意查收"),t.smsCapthaBtn.addClass("disabled");var e=10;t.smsCapthaBtn.unbind("click");var n=setInterval(function(){t.smsCapthaBtn.text(e+"s"),(e-=1)<=0&&(t.smsCapthaBtn.removeClass("disabled"),clearInterval(n),t.smsCapthaBtn.text("发送验证码"),t.ListensmsCaptchaEvent())},1e3)},Auth.prototype.ListensmsCaptchaEvent=function(){var o=this,a=$(".signup-group").find("input[name='telephone']");o.smsCapthaBtn.click(function(t){t.preventDefault();var e=a.val(),n=(new Date).getTime(),s=md5(e+n+"dagfdv!@$%$#^ghgdafdvsafa$@$#");console.log(n),/^1[35789]\d{9}$/.test(e)?xfzajax.post({url:"/account/sms_captcha/",data:{telephone:e,timestamp:n,sign:s},success:function(t){200==t.code?o.ListensmsSuccessSend():window.messageBox.showError(t.message)},fail:function(t){window.messageBox.showError(t)}}):window.messageBox.showError("请输入正确的手机号！")})},Auth.prototype.run=function(){this.ListenBtnClick(),this.Switch(),this.ListenSigninBtnClick(),this.ListenimgCaptcha(),this.ListensmsCaptchaEvent(),this.ListensignupEvent()},$(function(){(new Auth).run()}),$(function(){template.defaults.imports.timesince=function(t){var e=new Date(t),n=e.getTime(),s=((new Date).getTime()-n)/1e3;return s<60?"刚刚":60<s&&s<3600?(minutes=parseInt(s/60),minutes+"分钟前"):3600<s&&s<86400?(hours=parseInt(s/3600),hours+"小时前"):86400<s&&s<2592e3?(days=parseInt(s/86400),days+"天前"):e.getFullYear()+"/"+e.getMonth()+"/"+e.getDay()+"/"+e.getHours()+"/"+e.getMinutes()}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
