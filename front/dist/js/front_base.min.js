function FrontBase(){}function Auth(){this.scrollWrapper=$(".scroll-wrapper"),this.maskWrapper=$(".mask-wrapper"),this.smsCapthaBtn=$("#sms-captcha")}FrontBase.prototype.run=function(){this.ListenUserBox()},FrontBase.prototype.ListenUserBox=function(){var t=$(".auth-box"),e=$(".user-more-box");t.hover(function(){e.show()},function(){e.hide()})},$(function(){(new FrontBase).run()}),Auth.prototype.ShowEvent=function(){this.maskWrapper.show()},Auth.prototype.HideEvent=function(){this.maskWrapper.hide()},Auth.prototype.ListenBtnClick=function(){var t=this,e=$(".signin-btn"),n=$(".signup-btn"),s=$(".close-btn");e.click(function(){t.ShowEvent(),t.scrollWrapper.css({left:0})}),n.click(function(){t.ShowEvent(),t.scrollWrapper.css({left:"-400px"})}),s.click(function(){t.HideEvent()})},Auth.prototype.ListenSigninBtnClick=function(){var o=this,t=$(".signin-group"),e=t.find("input[name='telephone']"),n=t.find("input[name='password']"),s=t.find("input[name='remember']");t.find(".submit-btn").click(function(){telephone=e.val(),password=n.val(),remember=s.prop("checked"),telephone&&password||window.messageBox.showInfo("请输入完整的账号信息！"),xfzajax.post({url:"/account/login/",data:{telephone:telephone,password:password,remember:remember?1:0},success:function(t){if(200==t.code)o.HideEvent(),window.location.reload();else{var e=t.message;if("string"==typeof e||e.constructor==String)window.messageBox.showError(e);else for(var n in console.log(e),e){var s=e[n][0];window.messageBox.showError(s)}}},fail:function(t){window.messageBox.showError(t)}})})},Auth.prototype.ListensignupEvent=function(){var t=$(".signup-group"),r=t.find("input[name='telephone']"),c=t.find("input[name='sms_captcha']"),p=t.find("input[name='img_captcha']"),u=t.find("input[name='username']"),h=t.find("input[name='password1']"),l=t.find("input[name='password2']");t.find(".submit-btn").click(function(t){t.preventDefault();var e=r.val(),n=c.val(),s=p.val(),o=h.val(),a=l.val(),i=u.val();e?i?o?a?n&&s?xfzajax.post({url:"/account/signup/",data:{telephone:e,username:i,password1:o,password2:a,img_captcha:s,sms_captcha:n},success:function(t){if(200==t.code)window.location.reload();else{var e=t.message;if("string"==typeof e||e.constructor==String)window.messageBox.showError(e);else for(var n in console.log(e),e){var s=e[n][0];window.messageBox.showError(s)}}},fail:function(t){window.messageBox.showError(t)}}):window.messageBox.showError("请输入验证码"):window.messageBox.showError("请再次确认密码"):window.messageBox.showError("请输入密码"):window.messageBox.showError("请输入用户名"):window.messageBox.showError("请输入手机号")})},Auth.prototype.Switch=function(){var e=this;$(".switch").click(function(){var t=e.scrollWrapper.css("left");(t=parseInt(t))<0?e.scrollWrapper.animate({left:"0"}):e.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.ListenimgCaptcha=function(){var t=$("#captcha-img");t.click(function(){t.attr("src","/account/img_captcha/?=random"+Math.random())})},Auth.prototype.ListensmsSuccessSend=function(){var t=this;window.messageBox.showSuccess("发送成功，请注意查收"),t.smsCapthaBtn.addClass("disabled");var e=10;t.smsCapthaBtn.unbind("click");var n=setInterval(function(){t.smsCapthaBtn.text(e+"s"),(e-=1)<=0&&(t.smsCapthaBtn.removeClass("disabled"),clearInterval(n),t.smsCapthaBtn.text("发送验证码"),t.ListensmsCaptchaEvent())},1e3)},Auth.prototype.ListensmsCaptchaEvent=function(){var o=this,a=$(".signup-group").find("input[name='telephone']");o.smsCapthaBtn.click(function(t){t.preventDefault();var e=a.val(),n=(new Date).getTime(),s=md5(e+n+"dagfdv!@$%$#^ghgdafdvsafa$@$#");console.log(n),/^1[35789]\d{9}$/.test(e)?xfzajax.post({url:"/account/sms_captcha/",data:{telephone:e,timestamp:n,sign:s},success:function(t){200==t.code?o.ListensmsSuccessSend():window.messageBox.showError(t.message)},fail:function(t){window.messageBox.showError(t)}}):window.messageBox.showError("请输入正确的手机号！")})},Auth.prototype.run=function(){this.ListenBtnClick(),this.Switch(),this.ListenSigninBtnClick(),this.ListenimgCaptcha(),this.ListensmsCaptchaEvent(),this.ListensignupEvent()},$(function(){(new Auth).run()}),$(function(){window.template&&(template.defaults.imports.timesince=function(t){var e=new Date(t),n=e.getTime(),s=((new Date).getTime()-n)/1e3;return s<60?"刚刚":60<s&&s<3600?(minutes=parseInt(s/60),minutes+"分钟前"):3600<s&&s<86400?(hours=parseInt(s/3600),hours+"小时前"):86400<s&&s<2592e3?(days=parseInt(s/86400),days+"天前"):e.getFullYear()+"/"+e.getMonth()+"/"+e.getDay()+"/"+e.getHours()+"/"+e.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyb250X2Jhc2UuanMiXSwibmFtZXMiOlsiRnJvbnRCYXNlIiwiQXV0aCIsInRoaXMiLCJzY3JvbGxXcmFwcGVyIiwiJCIsIm1hc2tXcmFwcGVyIiwic21zQ2FwdGhhQnRuIiwicHJvdG90eXBlIiwicnVuIiwiTGlzdGVuVXNlckJveCIsImF1dGhCb3giLCJ1c2VyTW9yZUJveCIsImhvdmVyIiwic2hvdyIsImhpZGUiLCJTaG93RXZlbnQiLCJIaWRlRXZlbnQiLCJMaXN0ZW5CdG5DbGljayIsInNlbGYiLCJzaWduaW5CdG4iLCJzaWdudXBCdG4iLCJjbG9zZUJ0biIsImNsaWNrIiwiY3NzIiwibGVmdCIsIkxpc3RlblNpZ25pbkJ0bkNsaWNrIiwic2lnbmluR3JvdXAiLCJ0ZWxlcGhvbmVJbnB1dCIsImZpbmQiLCJwYXNzd29yZElucHV0IiwicmVtZW1iZXJJbnB1dCIsInRlbGVwaG9uZSIsInZhbCIsInBhc3N3b3JkIiwicmVtZW1iZXIiLCJwcm9wIiwid2luZG93IiwibWVzc2FnZUJveCIsInNob3dJbmZvIiwieGZ6YWpheCIsInBvc3QiLCJ1cmwiLCJkYXRhIiwic3VjY2VzcyIsInJlc3VsdCIsImxvY2F0aW9uIiwicmVsb2FkIiwibWVzc2FnZU9iamVjdCIsImNvbnN0cnVjdG9yIiwiU3RyaW5nIiwic2hvd0Vycm9yIiwia2V5IiwiY29uc29sZSIsImxvZyIsIm1lc3NhZ2UiLCJmYWlsIiwiZXJyb3IiLCJMaXN0ZW5zaWdudXBFdmVudCIsInNpZ251cEdyb3VwIiwic21zY2FwdGNoYUlucHV0IiwiaW1nY2FwdGNoYUlucHV0IiwidXNlcm5hbWVJbnB1dCIsInBhc3N3b3JkMUlucHV0IiwicGFzc3dvcmQySW5wdXQiLCJldmVudCIsInByZXZlbnREZWZhdWx0Iiwic21zX2NhcHRjaGEiLCJpbWdfY2FwdGNoYSIsInBhc3N3b3JkMSIsInBhc3N3b3JkMiIsInVzZXJuYW1lIiwiU3dpdGNoIiwiY3VycmVudExlZnQiLCJwYXJzZUludCIsImFuaW1hdGUiLCJMaXN0ZW5pbWdDYXB0Y2hhIiwiaW1nQ2FwdGNoYSIsImF0dHIiLCJNYXRoIiwicmFuZG9tIiwiTGlzdGVuc21zU3VjY2Vzc1NlbmQiLCJzaG93U3VjY2VzcyIsImFkZENsYXNzIiwiY291bnQiLCJ1bmJpbmQiLCJ0aW1lciIsInNldEludGVydmFsIiwidGV4dCIsInJlbW92ZUNsYXNzIiwiY2xlYXJJbnRlcnZhbCIsIkxpc3RlbnNtc0NhcHRjaGFFdmVudCIsInRpbWVzdGFtcCIsIkRhdGUiLCJnZXRUaW1lIiwic2lnbiIsIm1kNSIsInRlc3QiLCJ0ZW1wbGF0ZSIsImRlZmF1bHRzIiwiaW1wb3J0cyIsInRpbWVzaW5jZSIsInZhbHVlRGF0ZSIsImRhdGUiLCJkYXRlcyIsIm1pbnV0ZXMiLCJob3VycyIsImRheXMiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF5IiwiZ2V0SG91cnMiLCJnZXRNaW51dGVzIl0sIm1hcHBpbmdzIjoiQUFFQSxTQUFTQSxhQTJCVCxTQUFTQyxPQUNMQyxLQUFLQyxjQUFnQkMsRUFBRSxtQkFDdkJGLEtBQUtHLFlBQWNELEVBQUUsaUJBQ3JCRixLQUFLSSxhQUFlRixFQUFFLGdCQTNCMUJKLFVBQVVPLFVBQVVDLElBQU0sV0FDWE4sS0FDTk8saUJBR1RULFVBQVVPLFVBQVVFLGNBQWdCLFdBQ2xDLElBQUlDLEVBQVNOLEVBQUUsYUFDWE8sRUFBY1AsRUFBRSxrQkFDcEJNLEVBQVFFLE1BQU0sV0FDVkQsRUFBWUUsUUFDZCxXQUNFRixFQUFZRyxVQUlsQlYsRUFBRSxZQUNpQixJQUFJSixXQUNWUSxRQWNiUCxLQUFLTSxVQUFVUSxVQUFZLFdBQ1piLEtBQ05HLFlBQVlRLFFBR3JCWixLQUFLTSxVQUFVUyxVQUFZLFdBQ1pkLEtBQ05HLFlBQVlTLFFBR3JCYixLQUFLTSxVQUFVVSxlQUFpQixXQUM1QixJQUFJQyxFQUFPaEIsS0FDUGlCLEVBQVlmLEVBQUUsZUFDZGdCLEVBQVloQixFQUFFLGVBQ2RpQixFQUFXakIsRUFBRSxjQUNqQmUsRUFBVUcsTUFBTSxX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LEVBQ2I0RCxVQUFZQSxFQUNaRyxLQUFPQSxHQUVYbkQsUUFBVyxTQUFVQyxHQUNLLEtBQWxCQSxFQUFhLEtBQ2IxQixFQUFLOEQsdUJBRUw1QyxPQUFPQyxXQUFXYSxVQUFVTixFQUFnQixVQUdwRFcsS0FBUSxTQUFVQyxHQUNkcEIsT0FBT0MsV0FBV2EsVUFBVU0sTUFsQmhDcEIsT0FBT0MsV0FBV2EsVUFBVSxpQkF3QnhDakQsS0FBS00sVUFBVUMsSUFBTSxXQUNqQk4sS0FBS2UsaUJBQ0xmLEtBQUtxRSxTQUNMckUsS0FBS3VCLHVCQUNMdkIsS0FBS3lFLG1CQUNMekUsS0FBS3dGLHdCQUNMeEYsS0FBS3VELHFCQUdUckQsRUFBRSxZQUNhLElBQUlILE1BQ1ZPLFFBRVRKLEVBQUUsV0FFS2dDLE9BQU82RCxXQUNOQSxTQUFTQyxTQUFTQyxRQUFRQyxVQUFZLFNBQVVDLEdBQ2hELElBQUlDLEVBQU8sSUFBSVYsS0FBS1MsR0FDaEJFLEVBQVFELEVBQUtULFVBRWJGLElBRE0sSUFBS0MsTUFBUUMsVUFDRlUsR0FBTyxJQUM1QixPQUFHWixFQUFVLEdBQ0YsS0FFTyxHQUFWQSxHQUFnQkEsRUFBVSxNQUM1QmEsUUFBVS9CLFNBQVNrQixFQUFVLElBQ3ZCYSxRQUFRLE9BRUQsS0FBVmIsR0FBbUJBLEVBQVUsT0FDbENjLE1BQVFoQyxTQUFTa0IsRUFBVSxNQUNwQmMsTUFBTSxPQUdDLE1BQVZkLEdBQXNCQSxFQUFXLFFBRXJDZSxLQUFPakMsU0FBU2tCLEVBQVUsT0FDbkJlLEtBQUssTUFFREosRUFBS0ssY0FLSixJQUpBTCxFQUFLTSxXQUlLLElBSFpOLEVBQUtPLFNBR2UsSUFGbkJQLEVBQUtRLFdBRXVCLElBRDdCUixFQUFLUyIsImZpbGUiOiJmcm9udF9iYXNlLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIOaYvuekuueUqOaIt+abtOWkmuS/oeaBr+S7o+eggVxyXG5cclxuZnVuY3Rpb24gRnJvbnRCYXNlKCkge1xyXG5cclxufVxyXG5Gcm9udEJhc2UucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYuTGlzdGVuVXNlckJveCgpO1xyXG59O1xyXG5cclxuRnJvbnRCYXNlLnByb3RvdHlwZS5MaXN0ZW5Vc2VyQm94ID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhciBhdXRoQm94PSAkKCcuYXV0aC1ib3gnKTtcclxuICB2YXIgdXNlck1vcmVCb3ggPSAkKCcudXNlci1tb3JlLWJveCcpO1xyXG4gIGF1dGhCb3guaG92ZXIoZnVuY3Rpb24gKCkge1xyXG4gICAgICB1c2VyTW9yZUJveC5zaG93KCk7XHJcbiAgfSxmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHVzZXJNb3JlQm94LmhpZGUoKTtcclxuICB9KVxyXG59O1xyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgIHZhciBmcm9udEJhc2UgPSBuZXcgRnJvbnRCYXNlKCk7XHJcbiAgIGZyb250QmFzZS5ydW4oKTtcclxufSk7XHJcblxyXG4vLyAjIOeUqOaIt+eZu+W9leazqOWGjOeahGpz5Luj56CBXHJcblxyXG5cclxuXHJcbmZ1bmN0aW9uIEF1dGgoKSB7XHJcbiAgICB0aGlzLnNjcm9sbFdyYXBwZXIgPSAkKCcuc2Nyb2xsLXdyYXBwZXInKTtcclxuICAgIHRoaXMubWFza1dyYXBwZXIgPSAkKCcubWFzay13cmFwcGVyJyk7XHJcbiAgICB0aGlzLnNtc0NhcHRoYUJ0biA9ICQoJyNzbXMtY2FwdGNoYScpO1xyXG59XHJcblxyXG5cclxuQXV0aC5wcm90b3R5cGUuU2hvd0V2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5tYXNrV3JhcHBlci5zaG93KCk7XHJcbn07XHJcblxyXG5BdXRoLnByb3RvdHlwZS5IaWRlRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLm1hc2tXcmFwcGVyLmhpZGUoKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLkxpc3RlbkJ0bkNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIHNpZ25pbkJ0biA9ICQoJy5zaWduaW4tYnRuJyk7XHJcbiAgICB2YXIgc2lnbnVwQnRuID0gJCgnLnNpZ251cC1idG4nKTtcclxuICAgIHZhciBjbG9zZUJ0biA9ICQoJy5jbG9zZS1idG4nKTtcclxuICAgIHNpZ25pbkJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5TaG93RXZlbnQoKTtcclxuICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKHsnbGVmdCc6MH0pXHJcbiAgICB9KTtcclxuICAgIHNpZ251cEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5TaG93RXZlbnQoKTtcclxuICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKHsnbGVmdCc6Jy00MDBweCd9KVxyXG4gICAgfSk7XHJcbiAgICBjbG9zZUJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICBzZWxmLkhpZGVFdmVudCgpXHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8vICMg55m75b2VXHJcbkF1dGgucHJvdG90eXBlLkxpc3RlblNpZ25pbkJ0bkNsaWNrID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciBzaWduaW5Hcm91cCA9ICQoJy5zaWduaW4tZ3JvdXAnKTtcclxuICAgIHZhciB0ZWxlcGhvbmVJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSd0ZWxlcGhvbmUnXVwiKTtcclxuICAgIHZhciBwYXNzd29yZElucHV0ID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3Bhc3N3b3JkJ11cIik7XHJcbiAgICB2YXIgcmVtZW1iZXJJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdyZW1lbWJlciddXCIpO1xyXG4gICAgdmFyIHN1Ym1pdEJ0biA9IHNpZ25pbkdyb3VwLmZpbmQoJy5zdWJtaXQtYnRuJyk7XHJcblxyXG4gICAgc3VibWl0QnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgIHRlbGVwaG9uZSA9IHRlbGVwaG9uZUlucHV0LnZhbCgpO1xyXG4gICAgICAgcGFzc3dvcmQgPSBwYXNzd29yZElucHV0LnZhbCgpO1xyXG4gICAgICAgcmVtZW1iZXIgPXJlbWVtYmVySW5wdXQucHJvcCgnY2hlY2tlZCcpO1xyXG4gICAgICAgaWYoIXRlbGVwaG9uZSB8fCAhcGFzc3dvcmQpe1xyXG4gICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3dJbmZvKCfor7fovpPlhaXlrozmlbTnmoTotKblj7fkv6Hmga/vvIEnKVxyXG4gICAgICAgfVxyXG4gICAgICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAgICAndXJsJzonL2FjY291bnQvbG9naW4vJyxcclxuICAgICAgICAgICAnZGF0YSc6e1xyXG4gICAgICAgICAgICAgICAndGVsZXBob25lJzp0ZWxlcGhvbmUsXHJcbiAgICAgICAgICAgICAgICdwYXNzd29yZCc6cGFzc3dvcmQsXHJcbiAgICAgICAgICAgICAgICdyZW1lbWJlcic6cmVtZW1iZXI/MTowXHJcbiAgICAgICAgICAgfSxcclxuICAgICAgICAgICAnc3VjY2Vzcyc6ZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICBpZihyZXN1bHRbJ2NvZGUnXSA9PSAyMDApe1xyXG4gICAgICAgICAgICAgICAgICAgc2VsZi5IaWRlRXZlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKVxyXG4gICAgICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAvLyDmoLnmja7pnIDmsYLvvIxmb3Jtc+S4reW3sue7j+WwhmdldF9lcnJvcnPnmoTov5Tlm57lgLzlpITnkIbkuLrlrZflhbjmoLzlvI9cclxuICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlT2JqZWN0ID0gcmVzdWx0WydtZXNzYWdlJ107XHJcbiAgICAgICAgICAgICAgICAgICBpZih0eXBlb2YgbWVzc2FnZU9iamVjdCA9PSAnc3RyaW5nJ3x8IG1lc3NhZ2VPYmplY3QuY29uc3RydWN0b3IgPT0gU3RyaW5nICl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd0Vycm9yKG1lc3NhZ2VPYmplY3QpXHJcbiAgICAgICAgICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgLy8geyd1c2VybmFtZSc6Wyd4eHh4eHh4eHh4eHh4eHgnLCd4eHgnXSwndGVsZXBob25lJzpbJ3h4eHh4eHgnLCd4eHh4eHgnXX1cclxuICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhtZXNzYWdlT2JqZWN0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGtleSBpbiBtZXNzYWdlT2JqZWN0KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2VzID0gbWVzc2FnZU9iamVjdFtrZXldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9IG1lc3NhZ2VzWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93RXJyb3IobWVzc2FnZSlcclxuICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICdmYWlsJzpmdW5jdGlvbiAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd0Vycm9yKGVycm9yKVxyXG4gICAgICAgICAgIH1cclxuICAgICAgIH0pO1xyXG5cclxuICAgIH0pO1xyXG59O1xyXG4vLyDms6jlhoxcclxuQXV0aC5wcm90b3R5cGUuTGlzdGVuc2lnbnVwRXZlbnQgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHNpZ251cEdyb3VwID0gJCgnLnNpZ251cC1ncm91cCcpO1xyXG4gICAgdmFyIHRlbGVwaG9uZUlucHV0ID0gc2lnbnVwR3JvdXAuZmluZChcImlucHV0W25hbWU9J3RlbGVwaG9uZSddXCIpO1xyXG4gICAgdmFyIHNtc2NhcHRjaGFJbnB1dCA9IHNpZ251cEdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdzbXNfY2FwdGNoYSddXCIpO1xyXG4gICAgdmFyIGltZ2NhcHRjaGFJbnB1dCA9IHNpZ251cEdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdpbWdfY2FwdGNoYSddXCIpO1xyXG4gICAgdmFyIHVzZXJuYW1lSW5wdXQgPSBzaWdudXBHcm91cC5maW5kKFwiaW5wdXRbbmFtZT0ndXNlcm5hbWUnXVwiKTtcclxuICAgIHZhciBwYXNzd29yZDFJbnB1dCA9IHNpZ251cEdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdwYXNzd29yZDEnXVwiKTtcclxuICAgIHZhciBwYXNzd29yZDJJbnB1dCA9IHNpZ251cEdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdwYXNzd29yZDInXVwiKTtcclxuICAgIHZhciBzaWdudXBCdG4gPSBzaWdudXBHcm91cC5maW5kKCcuc3VibWl0LWJ0bicpO1xyXG5cclxuICAgIHNpZ251cEJ0bi5jbGljayhmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHZhciB0ZWxlcGhvbmUgPSB0ZWxlcGhvbmVJbnB1dC52YWwoKTtcclxuICAgICAgICB2YXIgc21zX2NhcHRjaGEgPSBzbXNjYXB0Y2hhSW5wdXQudmFsKCk7XHJcbiAgICAgICAgdmFyIGltZ19jYXB0Y2hhID0gaW1nY2FwdGNoYUlucHV0LnZhbCgpO1xyXG4gICAgICAgIHZhciBwYXNzd29yZDEgPSBwYXNzd29yZDFJbnB1dC52YWwoKTtcclxuICAgICAgICB2YXIgcGFzc3dvcmQyID0gcGFzc3dvcmQySW5wdXQudmFsKCk7XHJcbiAgICAgICAgdmFyIHVzZXJuYW1lID0gdXNlcm5hbWVJbnB1dC52YWwoKTtcclxuXHJcbiAgICAgICAgaWYoIXRlbGVwaG9uZSl7XHJcbiAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3dFcnJvcign6K+36L6T5YWl5omL5py65Y+3Jyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgIGlmKCF1c2VybmFtZSl7XHJcbiAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3dFcnJvcign6K+36L6T5YWl55So5oi35ZCNJyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgIGlmKCFwYXNzd29yZDEpe1xyXG4gICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93RXJyb3IoJ+ivt+i+k+WFpeWvhueggScpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgICBpZighcGFzc3dvcmQyKXtcclxuICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd0Vycm9yKCfor7flho3mrKHnoa7orqTlr4bnoIEnKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAgaWYoIXNtc19jYXB0Y2hhKXtcclxuICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd0Vycm9yKCfor7fovpPlhaXpqozor4HnoIEnKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWltZ19jYXB0Y2hhKSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3dFcnJvcign6K+36L6T5YWl6aqM6K+B56CBJyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAgICAgJ3VybCc6Jy9hY2NvdW50L3NpZ251cC8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6e1xyXG4gICAgICAgICAgICAgICAgJ3RlbGVwaG9uZSc6dGVsZXBob25lLFxyXG4gICAgICAgICAgICAgICAgJ3VzZXJuYW1lJzp1c2VybmFtZSxcclxuICAgICAgICAgICAgICAgICdwYXNzd29yZDEnOnBhc3N3b3JkMSxcclxuICAgICAgICAgICAgICAgICdwYXNzd29yZDInOnBhc3N3b3JkMixcclxuICAgICAgICAgICAgICAgICdpbWdfY2FwdGNoYSc6aW1nX2NhcHRjaGEsXHJcbiAgICAgICAgICAgICAgICAnc21zX2NhcHRjaGEnOnNtc19jYXB0Y2hhXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT0gMjAwKXtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKClcclxuICAgICAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyDmoLnmja7pnIDmsYLvvIxmb3Jtc+S4reW3sue7j+WwhmdldF9lcnJvcnPnmoTov5Tlm57lgLzlpITnkIbkuLrlrZflhbjmoLzlvI9cclxuICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZU9iamVjdCA9IHJlc3VsdFsnbWVzc2FnZSddO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVzc2FnZU9iamVjdCA9PSAnc3RyaW5nJyB8fCBtZXNzYWdlT2JqZWN0LmNvbnN0cnVjdG9yID09IFN0cmluZykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93RXJyb3IobWVzc2FnZU9iamVjdClcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB7J3VzZXJuYW1lJzpbJ3h4eHh4eHh4eHh4eHh4eCcsJ3h4eCddLCd0ZWxlcGhvbmUnOlsneHh4eHh4eCcsJ3h4eHh4eCddfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhtZXNzYWdlT2JqZWN0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIG1lc3NhZ2VPYmplY3QpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlcyA9IG1lc3NhZ2VPYmplY3Rba2V5XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlID0gbWVzc2FnZXNbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93RXJyb3IobWVzc2FnZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ2ZhaWwnOmZ1bmN0aW9uIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd0Vycm9yKGVycm9yKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn07XHJcbkF1dGgucHJvdG90eXBlLlN3aXRjaCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgc3dpdGNoQnRuID0gJCgnLnN3aXRjaCcpO1xyXG4gICAgc3dpdGNoQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY3VycmVudExlZnQgPSBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKFwibGVmdFwiKTtcclxuICAgICAgICBjdXJyZW50TGVmdCA9IHBhcnNlSW50KGN1cnJlbnRMZWZ0KTtcclxuICAgICAgICBpZiAoY3VycmVudExlZnQgPCAwKSB7XHJcbiAgICAgICAgICAgIHNlbGYuc2Nyb2xsV3JhcHBlci5hbmltYXRlKHtcImxlZnRcIjogJzAnfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc2VsZi5zY3JvbGxXcmFwcGVyLmFuaW1hdGUoe1wibGVmdFwiOiBcIi00MDBweFwifSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcbi8vIOWbvuW9oumqjOivgeeggeeCueWHu+WPmOaNouS6i+S7tlxyXG5BdXRoLnByb3RvdHlwZS5MaXN0ZW5pbWdDYXB0Y2hhID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBpbWdDYXB0Y2hhID0gJCgnI2NhcHRjaGEtaW1nJyk7XHJcbiAgICBpbWdDYXB0Y2hhLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgIGltZ0NhcHRjaGEuYXR0cignc3JjJywnL2FjY291bnQvaW1nX2NhcHRjaGEvJysnPz1yYW5kb20nK01hdGgucmFuZG9tKCkpXHJcbiAgICB9KTtcclxufTtcclxuLy8gIOmqjOivgeeggeaIkOWKn+WPkemAgeS6i+S7tlxyXG5BdXRoLnByb3RvdHlwZS5MaXN0ZW5zbXNTdWNjZXNzU2VuZCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93U3VjY2Vzcygn5Y+R6YCB5oiQ5Yqf77yM6K+35rOo5oSP5p+l5pS2Jyk7XHJcbiAgICBzZWxmLnNtc0NhcHRoYUJ0bi5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgIHZhciBjb3VudCA9IDEwO1xyXG4gICAgc2VsZi5zbXNDYXB0aGFCdG4udW5iaW5kKCdjbGljaycpO1xyXG4gICAgdmFyIHRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc21zQ2FwdGhhQnRuLnRleHQoY291bnQgKyAncycpO1xyXG4gICAgICAgIGNvdW50IC09IDE7XHJcbiAgICAgICAgaWYgKGNvdW50IDw9IDApIHtcclxuICAgICAgICAgICAgc2VsZi5zbXNDYXB0aGFCdG4ucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpO1xyXG4gICAgICAgICAgICBzZWxmLnNtc0NhcHRoYUJ0bi50ZXh0KCflj5HpgIHpqozor4HnoIEnKTtcclxuICAgICAgICAgICAgc2VsZi5MaXN0ZW5zbXNDYXB0Y2hhRXZlbnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9LCAxMDAwKVxyXG59O1xyXG4vLyDnn63kv6Hpqozor4HnoIHlj5HpgIHkuovku7ZcclxuQXV0aC5wcm90b3R5cGUuTGlzdGVuc21zQ2FwdGNoYUV2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciBzaWdudXBHcm91cCA9ICQoJy5zaWdudXAtZ3JvdXAnKTtcclxuICAgIHZhciB0ZWxlcGhvbmVJbnB1dCA9IHNpZ251cEdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSd0ZWxlcGhvbmUnXVwiKTtcclxuXHJcbiAgICBzZWxmLnNtc0NhcHRoYUJ0bi5jbGljayhmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHZhciB0ZWxlcGhvbmUgPSB0ZWxlcGhvbmVJbnB1dC52YWwoKTtcclxuICAgICAgICAvL+iOt+WPluaXtumXtOaIs1xyXG4gICAgICAgIHZhciB0aW1lc3RhbXAgPSAobmV3IERhdGUpLmdldFRpbWUoKTtcclxuICAgICAgICAvLyDnlJ/miJDkuIDkuKpzaWduICznlKjkuo7pqozor4HvvIFcclxuICAgICAgICB2YXIgc2lnbiA9IG1kNSh0ZWxlcGhvbmUgKyB0aW1lc3RhbXAgKyAnZGFnZmR2IUAkJSQjXmdoZ2RhZmR2c2FmYSRAJCMnKTtcclxuICAgICAgICBjb25zb2xlLmxvZyh0aW1lc3RhbXApO1xyXG4gICAgICAgIGlmICghKC9eMVszNTc4OV1cXGR7OX0kLy50ZXN0KHRlbGVwaG9uZSkpKSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3dFcnJvcign6K+36L6T5YWl5q2j56Gu55qE5omL5py65Y+377yBJyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAgICAgJ3VybCc6ICcvYWNjb3VudC9zbXNfY2FwdGNoYS8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICd0ZWxlcGhvbmUnOiB0ZWxlcGhvbmUsXHJcbiAgICAgICAgICAgICAgICAndGltZXN0YW1wJzp0aW1lc3RhbXAsXHJcbiAgICAgICAgICAgICAgICAnc2lnbic6c2lnblxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXSA9PSAyMDApIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLkxpc3RlbnNtc1N1Y2Nlc3NTZW5kKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3dFcnJvcihyZXN1bHRbJ21lc3NhZ2UnXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdmYWlsJzogZnVuY3Rpb24gKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93RXJyb3IoZXJyb3IpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufTtcclxuLy8g5YWl5Y+j5Ye95pWwXHJcbkF1dGgucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHRoaXMuTGlzdGVuQnRuQ2xpY2soKTtcclxuICAgIHRoaXMuU3dpdGNoKCk7XHJcbiAgICB0aGlzLkxpc3RlblNpZ25pbkJ0bkNsaWNrKCk7XHJcbiAgICB0aGlzLkxpc3RlbmltZ0NhcHRjaGEoKTtcclxuICAgIHRoaXMuTGlzdGVuc21zQ2FwdGNoYUV2ZW50KCk7IC8v55+t5L+h6aqM6K+B56CBXHJcbiAgICB0aGlzLkxpc3RlbnNpZ251cEV2ZW50KCk7Ly8g55So5oi35rOo5YaMXHJcbn07XHJcblxyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBhdXRoID0gbmV3IEF1dGgoKTtcclxuICAgIGF1dGgucnVuKCk7XHJcbn0pO1xyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgICAgIC8vIGFydC10ZW1wbGF0Zeaooeadv+i/h+a7pOWZqFxyXG4gICAgaWYod2luZG93LnRlbXBsYXRlKXtcclxuICAgICAgICB0ZW1wbGF0ZS5kZWZhdWx0cy5pbXBvcnRzLnRpbWVzaW5jZSA9IGZ1bmN0aW9uICh2YWx1ZURhdGUpIHtcclxuICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHZhbHVlRGF0ZSk7XHJcbiAgICAgICAgdmFyIGRhdGVzID0gZGF0ZS5nZXRUaW1lKCk7XHJcbiAgICAgICAgdmFyIG5vdyA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XHJcbiAgICAgICAgdmFyIHRpbWVzdGFtcCA9IChub3ctZGF0ZXMpLzEwMDA7XHJcbiAgICAgICAgaWYodGltZXN0YW1wPDYwKXtcclxuICAgICAgICAgICAgcmV0dXJuICfliJrliJonO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKHRpbWVzdGFtcD42MCAmJiB0aW1lc3RhbXA8NjAqNjApe1xyXG4gICAgICAgICAgICAgIG1pbnV0ZXMgPSBwYXJzZUludCh0aW1lc3RhbXAvNjApO1xyXG4gICAgICAgICAgICByZXR1cm4gIG1pbnV0ZXMrJ+WIhumSn+WJjSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRpbWVzdGFtcD42MCo2MCAmJiB0aW1lc3RhbXA8NjAqNjAqMjQpIHtcclxuICAgICAgICAgICAgaG91cnMgPSBwYXJzZUludCh0aW1lc3RhbXAvKDYwKjYwKSk7XHJcbiAgICAgICAgICAgIHJldHVybiBob3Vycysn5bCP5pe25YmNJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGVsc2UgaWYodGltZXN0YW1wPjYwKjYwKjI0ICYmIHRpbWVzdGFtcCA8NjAqNjAqMjQqMzApXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBkYXlzID0gcGFyc2VJbnQodGltZXN0YW1wLyg2MCo2MCoyNCkpO1xyXG4gICAgICAgICAgICByZXR1cm4gZGF5cysn5aSp5YmNJztcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xyXG4gICAgICAgICAgICB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XHJcbiAgICAgICAgICAgIHZhciBkYXkgPSBkYXRlLmdldERheSgpO1xyXG4gICAgICAgICAgICB2YXIgaG91ciA9IGRhdGUuZ2V0SG91cnMoKTtcclxuICAgICAgICAgICAgdmFyIG1pbiA9IGRhdGUuZ2V0TWludXRlcygpO1xyXG4gICAgICAgICAgICByZXR1cm4geWVhcisnLycrbW9udGgrJy8nK2RheSsnLycraG91cisnLycrbWluO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbiAgICB9XHJcbn0pO1xyXG4vLyAjIOWbvuW9oumqjOivgeeggeWIt+aWsFxyXG4vLyAkKGZ1bmN0aW9uICgpIHtcclxuLy8gICAgICQoJyNjYXB0Y2hhLWltZycpLmNsaWNrKGZ1bmN0aW9uIChldmVudCkge1xyXG4vLyAgICAgICAgIHZhciBzZWxmID0gJCh0aGlzKTtcclxuLy8gICAgICAgICB2YXIgc3JjID0gc2VsZi5hdHRyKCdzcmMnKTtcclxuLy8gICAgICAgICB2YXIgbmV3c3JjID0gemxwYXJhbS5zZXRQYXJhbShzcmMsJ3h4JyxNYXRoLnJhbmRvbSgpKTtcclxuLy8gICAgICAgICBzZWxmLmF0dHIoJ3NyYycsbmV3c3JjKTtcclxuLy8gICAgIH0pXHJcbi8vIH0pO1xyXG4iXX0=
