function News(){}News.prototype.UeditorEvent=function(){var t=UE.getEditor("container",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"});window.ue=t},News.prototype.AddNewsEvent=function(){var t=$("#submit-Btn"),r=$("input[name='title']"),s=$("select[name='category']"),u=$("input[name='desc']"),l=$("input[name='thumbnail']");t.click(function(t){t.preventDefault();var e=r.val(),n=s.val(),i=u.val(),o=l.val(),a=ue.getContent();e&&n&&i&&o&&a?xfzajax.post({url:"/cms/add_news/",data:{title:e,category:n,desc:i,thumbnail:o,content:a},success:function(t){200===t.code&&(xtalert.alertSuccessToast("发布成功！"),window.location="/cms/news_lists/")},fail:function(t){xtalert.alertInfoToast(t)}}):window.messageBox.showError("请输入新闻完整信息！")})},News.prototype.listenUploadFileEvent=function(){var n=$("#thumbnail-btn");n.change(function(){var t=n[0].files[0],e=new FormData;e.append("file",t),xfzajax.post({url:"/cms/upload_file/",data:e,processData:!1,contentType:!1,success:function(t){if(200===t.code){var e=t.data.url;$("input[name='thumbnail']").val(e)}}})})},News.prototype.listenQiniuUploadEvent=function(){var r=this;$("#thumbnail-btn").change(function(){var a=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(t){if(200===t.code){var e=t.data.token,n=(new Date).getTime()+"."+a.name.split(".")[1],i={fname:n,params:{},mimeType:["image/png","image/jpeg","image/gif","video/mp4"]},o={userCdnDomain:!0,retryCount:6,region:qiniu.region.z1};qiniu.upload(a,n,e,i,o).subscribe({next:r.QiniuUploadNext,error:r.QiniuUploadError,complete:r.QiniuUploadComplete})}}})})},News.prototype.QiniuUploadNext=function(t){var e=t.total.percent,n=$("#progess-group"),i=$(".progress-bar");i.css({width:0}),n.show(),i.css({width:e+"%"}),i.text(e.toFixed()+"%")},News.prototype.QiniuUploadError=function(t){xtalert.alertErrorToast("上传文件类型错误，请选择图片文件！")},News.prototype.QiniuUploadComplete=function(t){var e=t.key,n=$("#progess-group");$("input[name='thumbnail']").val("http://pbci7ji9t.bkt.clouddn.com/"+e),n.hide()},News.prototype.run=function(){var t=this;t.listenQiniuUploadEvent(),t.UeditorEvent(),t.AddNewsEvent()},$(function(){(new News).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZF9uZXdzLmpzIl0sIm5hbWVzIjpbIk5ld3MiLCJwcm90b3R5cGUiLCJVZWRpdG9yRXZlbnQiLCJ1ZSIsIlVFIiwiZ2V0RWRpdG9yIiwiaW5pdGlhbEZyYW1lSGVpZ2h0Iiwic2VydmVyVXJsIiwid2luZG93IiwiQWRkTmV3c0V2ZW50Iiwic3VibWl0QnRuIiwiJCIsInRpdGxlSW5wdXQiLCJjYXRlZ29yeVNlbGVjdCIsImRlc2NJbnB1dCIsInRodW1ibmFpbElucHV0IiwiY2xpY2siLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwidGl0bGUiLCJ2YWwiLCJjYXRlZ29yeSIsImRlc2MiLCJ0aHVtYm5haWwiLCJjb250ZW50IiwiZ2V0Q29udGVudCIsInhmemFqYXgiLCJwb3N0IiwidXJsIiwiZGF0YSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJ4dGFsZXJ0IiwiYWxlcnRTdWNjZXNzVG9hc3QiLCJsb2NhdGlvbiIsImZhaWwiLCJlcnJvciIsImFsZXJ0SW5mb1RvYXN0IiwibWVzc2FnZUJveCIsInNob3dFcnJvciIsImxpc3RlblVwbG9hZEZpbGVFdmVudCIsInVwbG9hZEJ0biIsImNoYW5nZSIsImZpbGUiLCJmaWxlcyIsImZvcm1kYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJwcm9jZXNzRGF0YSIsImNvbnRlbnRUeXBlIiwiaW1nVXJsIiwibGlzdGVuUWluaXVVcGxvYWRFdmVudCIsInNlbGYiLCJ0aGlzIiwiZ2V0IiwidG9rZW4iLCJrZXkiLCJEYXRlIiwiZ2V0VGltZSIsIm5hbWUiLCJzcGxpdCIsInB1dEV4dHJhIiwiZm5hbWUiLCJwYXJhbXMiLCJtaW1lVHlwZSIsImNvbmZpZyIsInVzZXJDZG5Eb21haW4iLCJyZXRyeUNvdW50IiwicmVnaW9uIiwicWluaXUiLCJ6MSIsInVwbG9hZCIsInN1YnNjcmliZSIsIm5leHQiLCJRaW5pdVVwbG9hZE5leHQiLCJRaW5pdVVwbG9hZEVycm9yIiwiY29tcGxldGUiLCJRaW5pdVVwbG9hZENvbXBsZXRlIiwicmVzIiwicGVyY2VudCIsInRvdGFsIiwicHJvZ2Vzc0dyb3VwIiwicHJvZ2Vzc2JhciIsImNzcyIsIndpZHRoIiwic2hvdyIsInRleHQiLCJ0b0ZpeGVkIiwiZXJyIiwiYWxlcnRFcnJvclRvYXN0IiwiZmlsZW5hbWUiLCJoaWRlIiwicnVuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxRQUtUQSxLQUFLQyxVQUFVQyxhQUFlLFdBQzFCLElBQUlDLEVBQUtDLEdBQUdDLFVBQVUsWUFBWSxDQUMxQkMsbUJBQXNCLElBQ3RCQyxVQUFhLHFCQUVyQkMsT0FBT0wsR0FBS0EsR0FFaEJILEtBQUtDLFVBQVVRLGFBQWUsV0FDMUIsSUFBSUMsRUFBWUMsRUFBRSxlQUNkQyxFQUFhRCxFQUFFLHVCQUNmRSxFQUFpQkYsRUFBRSwyQkFDbkJHLEVBQVlILEVBQUUsc0JBQ2RJLEVBQWlCSixFQUFFLDJCQUN2QkQsRUFBVU0sTUFBTSxTQUFVQyxHQUN0QkEsRUFBTUMsaUJBQ04sSUFBSUMsRUFBUVAsRUFBV1EsTUFDbkJDLEVBQVdSLEVBQWVPLE1BQzFCRSxFQUFPUixFQUFVTSxNQUNqQkcsRUFBWVIsRUFBZUssTUFDM0JJLEVBQVVyQixHQUFHc0IsYUFDYk4sR0FBUUUsR0FBV0MsR0FBT0MsR0FBWUMsRUFJMUNFLFFBQVFDLEtBQUssQ0FDVEMsSUFBTSxpQkFDTkMsS0FBTyxDQUNIVixNQUFRQSxFQUNSRSxTQUFXQSxFQUNYQyxLQUFPQSxFQUNQQyxVQUFZQSxFQUNaQyxRQUFVQSxHQUVkTSxRQUFVLFNBQVVDLEdBQ00sTUFBbkJBLEVBQWEsT0FDWkMsUUFBUUMsa0JBQWtCLFNBQzFCekIsT0FBTzBCLFNBQVcscUJBRzFCQyxLQUFPLFNBQVVDLEdBQ2JKLFFBQVFLLGVBQWVELE1BbkIzQjVCLE9BQU84QixXQUFXQyxVQUFVLGlCQTBCeEN2QyxLQUFLQyxVQUFVdUMsc0JBQXdCLFdBQ25DLElBQUlDLEVBQVk5QixFQUFFLGtCQUNsQjhCLEVBQVVDLE9BQU8sV0FDYixJQUFJQyxFQUFPRixFQUFVLEdBQUdHLE1BQU0sR0FDMUJDLEVBQVcsSUFBSUMsU0FDbkJELEVBQVNFLE9BQU8sT0FBUUosR0FDeEJqQixRQUFRQyxLQUFLLENBQ1RDLElBQU0sb0JBQ05DLEtBQVFnQixFQUNSRyxhQUFlLEVBQ2ZDLGFBQWUsRUFDZm5CLFFBQVcsU0FBVUMsR0FDakIsR0FBc0IsTUFBbkJBLEVBQWEsS0FBVSxDQUN0QixJQUFJbUIsRUFBU25CLEVBQWEsS0FBTyxJQUNsQnBCLEVBQUUsMkJBQ1JTLElBQUk4QixVQU9qQ2xELEtBQUtDLFVBQVVrRCx1QkFBeUIsV0FDcEMsSUFBSUMsRUFBT0MsS0FDUzFDLEVBQUUsa0JBQ1IrQixPQUFPLFdBQ2IsSUFBSUMsRUFBT1UsS0FBS1QsTUFBTSxHQUN0QmxCLFFBQVE0QixJQUFJLENBQ1IxQixJQUFNLGdCQUNORSxRQUFVLFNBQVVDLEdBQ2hCLEdBQXNCLE1BQW5CQSxFQUFhLEtBQVUsQ0FDdEIsSUFBSXdCLEVBQVF4QixFQUFhLEtBQVMsTUFDOUJ5QixHQUFNLElBQUtDLE1BQVFDLFVBQVUsSUFBSWYsRUFBS2dCLEtBQUtDLE1BQU0sS0FBSyxHQUN0REMsRUFBVyxDQUNYQyxNQUFRTixFQUNSTyxPQUFTLEdBQ1RDLFNBQVcsQ0FBQyxZQUFZLGFBQWEsWUFBWSxjQUVqREMsRUFBUyxDQUNUQyxlQUFnQixFQUNoQkMsV0FBYSxFQUNiQyxPQUFTQyxNQUFNRCxPQUFPRSxJQUVURCxNQUFNRSxPQUFPNUIsRUFBS2EsRUFBSUQsRUFBTU0sRUFBU0ksR0FDM0NPLFVBQVUsQ0FDakJDLEtBQU9yQixFQUFLc0IsZ0JBQ1p0QyxNQUFRZ0IsRUFBS3VCLGlCQUNiQyxTQUFXeEIsRUFBS3lCLDZCQVE1QzdFLEtBQUtDLFVBQVV5RSxnQkFBa0IsU0FBU0ksR0FDdEMsSUFDSUMsRUFEUUQsRUFBSUUsTUFDSUQsUUFDaEJFLEVBQWV0RSxFQUFFLGtCQUNqQnVFLEVBQWF2RSxFQUFFLGlCQUNuQnVFLEVBQVdDLElBQUksQ0FBQ0MsTUFBUSxJQUN4QkgsRUFBYUksT0FDYkgsRUFBV0MsSUFBSSxDQUFDQyxNQUFRTCxFQUFRLE1BQ2hDRyxFQUFXSSxLQUFLUCxFQUFRUSxVQUFVLE1BRXRDdkYsS0FBS0MsVUFBVTBFLGlCQUFtQixTQUFTYSxHQUV2Q3hELFFBQVF5RCxnQkFESixzQkFJUnpGLEtBQUtDLFVBQVU0RSxvQkFBc0IsU0FBU0MsR0FDMUMsSUFBSVksRUFBV1osRUFBUyxJQUVwQkcsRUFBZXRFLEVBQUUsa0JBQ0xBLEVBQUUsMkJBQ1JTLElBSEcsb0NBR1FzRSxHQUNyQlQsRUFBYVUsUUFHakIzRixLQUFLQyxVQUFVMkYsSUFBTSxXQUNqQixJQUFJeEMsRUFBT0MsS0FFWEQsRUFBS0QseUJBQ0xDLEVBQUtsRCxlQUNMa0QsRUFBSzNDLGdCQUdURSxFQUFFLFlBQ1ksSUFBSVgsTUFDVjRGIiwiZmlsZSI6ImFkZF9uZXdzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIE5ld3MoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbn1cclxuXHJcbi8v5a6e5L6L5YyW55m+5bqm5a+M5paH5pys57yW6L6R5ZmoXHJcbk5ld3MucHJvdG90eXBlLlVlZGl0b3JFdmVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgdWUgPSBVRS5nZXRFZGl0b3IoJ2NvbnRhaW5lcicse1xyXG4gICAgICAgICAgICAnaW5pdGlhbEZyYW1lSGVpZ2h0JzogNDAwLFxyXG4gICAgICAgICAgICAnc2VydmVyVXJsJzogJy91ZWRpdG9yL3VwbG9hZC8nXHJcbiAgICAgICAgfSk7XHJcbiAgICB3aW5kb3cudWUgPSB1ZVxyXG59O1xyXG5OZXdzLnByb3RvdHlwZS5BZGROZXdzRXZlbnQgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHN1Ym1pdEJ0biA9ICQoJyNzdWJtaXQtQnRuJyk7XHJcbiAgICB2YXIgdGl0bGVJbnB1dCA9ICQoXCJpbnB1dFtuYW1lPSd0aXRsZSddXCIpO1xyXG4gICAgdmFyIGNhdGVnb3J5U2VsZWN0ID0gJChcInNlbGVjdFtuYW1lPSdjYXRlZ29yeSddXCIpO1xyXG4gICAgdmFyIGRlc2NJbnB1dCA9ICQoXCJpbnB1dFtuYW1lPSdkZXNjJ11cIik7XHJcbiAgICB2YXIgdGh1bWJuYWlsSW5wdXQgPSAkKFwiaW5wdXRbbmFtZT0ndGh1bWJuYWlsJ11cIik7XHJcbiAgICBzdWJtaXRCdG4uY2xpY2soZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB2YXIgdGl0bGUgPSB0aXRsZUlucHV0LnZhbCgpO1xyXG4gICAgICAgIHZhciBjYXRlZ29yeSA9IGNhdGVnb3J5U2VsZWN0LnZhbCgpO1xyXG4gICAgICAgIHZhciBkZXNjID0gZGVzY0lucHV0LnZhbCgpO1xyXG4gICAgICAgIHZhciB0aHVtYm5haWwgPSB0aHVtYm5haWxJbnB1dC52YWwoKTtcclxuICAgICAgICB2YXIgY29udGVudCA9IHVlLmdldENvbnRlbnQoKTtcclxuICAgICAgICBpZighdGl0bGV8fCFjYXRlZ29yeXx8IWRlc2N8fCF0aHVtYm5haWx8fCFjb250ZW50KXtcclxuICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd0Vycm9yKCfor7fovpPlhaXmlrDpl7vlrozmlbTkv6Hmga/vvIEnKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzonL2Ntcy9hZGRfbmV3cy8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6e1xyXG4gICAgICAgICAgICAgICAgJ3RpdGxlJzp0aXRsZSxcclxuICAgICAgICAgICAgICAgICdjYXRlZ29yeSc6Y2F0ZWdvcnksXHJcbiAgICAgICAgICAgICAgICAnZGVzYyc6ZGVzYyxcclxuICAgICAgICAgICAgICAgICd0aHVtYm5haWwnOnRodW1ibmFpbCxcclxuICAgICAgICAgICAgICAgICdjb250ZW50Jzpjb250ZW50XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZihyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKXtcclxuICAgICAgICAgICAgICAgICAgICB4dGFsZXJ0LmFsZXJ0U3VjY2Vzc1RvYXN0KCflj5HluIPmiJDlip/vvIEnKTtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSAnL2Ntcy9uZXdzX2xpc3RzLyc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdmYWlsJzpmdW5jdGlvbiAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIHh0YWxlcnQuYWxlcnRJbmZvVG9hc3QoZXJyb3IpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufTtcclxuXHJcbi8vIOS4iuS8oOWIsOacrOWcsOacjeWKoeWZqOiuvue9rlxyXG5OZXdzLnByb3RvdHlwZS5saXN0ZW5VcGxvYWRGaWxlRXZlbnQgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHVwbG9hZEJ0biA9ICQoJyN0aHVtYm5haWwtYnRuJyk7XHJcbiAgICB1cGxvYWRCdG4uY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZmlsZSA9IHVwbG9hZEJ0blswXS5maWxlc1swXTtcclxuICAgICAgICB2YXIgZm9ybWRhdGEgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICBmb3JtZGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKTtcclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzonL2Ntcy91cGxvYWRfZmlsZS8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IGZvcm1kYXRhLFxyXG4gICAgICAgICAgICAncHJvY2Vzc0RhdGEnOiBmYWxzZSxcclxuICAgICAgICAgICAgJ2NvbnRlbnRUeXBlJzogZmFsc2UsXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgaWYocmVzdWx0Wydjb2RlJ10gPT09IDIwMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGltZ1VybCA9IHJlc3VsdFsnZGF0YSddWyd1cmwnXTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdXJsSW5wdXQgPSAkKFwiaW5wdXRbbmFtZT0ndGh1bWJuYWlsJ11cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdXJsSW5wdXQudmFsKGltZ1VybCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufTtcclxuLy8g5LiK5Lyg5Yiw5LiD54mb5LqRXHJcbk5ld3MucHJvdG90eXBlLmxpc3RlblFpbml1VXBsb2FkRXZlbnQgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHZhciB1cGxvYWRCdG4gPSAkKCcjdGh1bWJuYWlsLWJ0bicpO1xyXG4gICAgICAgIHVwbG9hZEJ0bi5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZmlsZSA9IHRoaXMuZmlsZXNbMF07XHJcbiAgICAgICAgICAgIHhmemFqYXguZ2V0KHtcclxuICAgICAgICAgICAgICAgICd1cmwnOicvY21zL3FudG9rZW4vJyxcclxuICAgICAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0Wydjb2RlJ10gPT09IDIwMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0b2tlbiA9IHJlc3VsdFsnZGF0YSddWyd0b2tlbiddO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIga2V5ID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKSsnLicrZmlsZS5uYW1lLnNwbGl0KCcuJylbMV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwdXRFeHRyYSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmbmFtZSc6a2V5LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3BhcmFtcyc6e30sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbWltZVR5cGUnOlsnaW1hZ2UvcG5nJywnaW1hZ2UvanBlZycsJ2ltYWdlL2dpZicsJ3ZpZGVvL21wNCddXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjb25maWcgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndXNlckNkbkRvbWFpbic6dHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdyZXRyeUNvdW50Jzo2LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3JlZ2lvbic6cWluaXUucmVnaW9uLnoxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgb2JzZXJ2YWJsZSA9IHFpbml1LnVwbG9hZChmaWxlLGtleSx0b2tlbixwdXRFeHRyYSxjb25maWcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZhYmxlLnN1YnNjcmliZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbmV4dCc6c2VsZi5RaW5pdVVwbG9hZE5leHQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZXJyb3InOnNlbGYuUWluaXVVcGxvYWRFcnJvcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjb21wbGV0ZSc6c2VsZi5RaW5pdVVwbG9hZENvbXBsZXRlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbn07XHJcbi8vIOaWh+S7tuS4iuS8oG5leHTvvIzkvJrmnInkuIrkvKDnmoTov5vluqbkv6Hmga9cclxuTmV3cy5wcm90b3R5cGUuUWluaXVVcGxvYWROZXh0ID0gZnVuY3Rpb24ocmVzKXtcclxuICAgIHZhciB0b3RhbCA9IHJlcy50b3RhbDtcclxuICAgIHZhciBwZXJjZW50ID0gdG90YWwucGVyY2VudDtcclxuICAgIHZhciBwcm9nZXNzR3JvdXAgPSAkKCcjcHJvZ2Vzcy1ncm91cCcpO1xyXG4gICAgdmFyIHByb2dlc3NiYXIgPSAkKCcucHJvZ3Jlc3MtYmFyJyk7XHJcbiAgICBwcm9nZXNzYmFyLmNzcyh7J3dpZHRoJzowfSk7XHJcbiAgICBwcm9nZXNzR3JvdXAuc2hvdygpO1xyXG4gICAgcHJvZ2Vzc2Jhci5jc3Moeyd3aWR0aCc6cGVyY2VudCsnJSd9KTtcclxuICAgIHByb2dlc3NiYXIudGV4dChwZXJjZW50LnRvRml4ZWQoKSsnJScpO1xyXG59O1xyXG5OZXdzLnByb3RvdHlwZS5RaW5pdVVwbG9hZEVycm9yID0gZnVuY3Rpb24oZXJyKXtcclxuICAgIGVycj0n5LiK5Lyg5paH5Lu257G75Z6L6ZSZ6K+v77yM6K+36YCJ5oup5Zu+54mH5paH5Lu277yBJztcclxuICAgIHh0YWxlcnQuYWxlcnRFcnJvclRvYXN0KGVycik7XHJcbiAgICAvLyB3aW5kb3cubWVzc2FnZUJveC5zaG93RXJyb3IoZXJyKTtcclxufTtcclxuTmV3cy5wcm90b3R5cGUuUWluaXVVcGxvYWRDb21wbGV0ZSA9IGZ1bmN0aW9uKHJlcyl7XHJcbiAgICB2YXIgZmlsZW5hbWUgPSByZXNbJ2tleSddO1xyXG4gICAgdmFyIGRvbWFpbiA9ICdodHRwOi8vcGJjaTdqaTl0LmJrdC5jbG91ZGRuLmNvbS8nO1xyXG4gICAgdmFyIHByb2dlc3NHcm91cCA9ICQoJyNwcm9nZXNzLWdyb3VwJyk7XHJcbiAgICB2YXIgZmlsZUlucHV0ID0gJChcImlucHV0W25hbWU9J3RodW1ibmFpbCddXCIpO1xyXG4gICAgZmlsZUlucHV0LnZhbChkb21haW4rZmlsZW5hbWUpO1xyXG4gICAgcHJvZ2Vzc0dyb3VwLmhpZGUoKTtcclxuXHJcbn07XHJcbk5ld3MucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIC8vIHNlbGYubGlzdGVuVXBsb2FkRmlsZUV2ZW50KCk7XHJcbiAgICBzZWxmLmxpc3RlblFpbml1VXBsb2FkRXZlbnQoKTtcclxuICAgIHNlbGYuVWVkaXRvckV2ZW50KCk7XHJcbiAgICBzZWxmLkFkZE5ld3NFdmVudCgpO1xyXG59O1xyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgIHZhciBuZXdzID0gbmV3IE5ld3MoKTtcclxuICAgbmV3cy5ydW4oKTtcclxufSk7Il19
